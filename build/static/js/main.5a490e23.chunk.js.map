{"version":3,"sources":["redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","components/PrivateRouter.js","components/PublicRouter.js","components/Navigation/NavBar/AppNav.js","components/Navigation/Navigation.js","App.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.module.css","components/Navigation/NavBar/AppNav.module.css","redux/auth/auth-actions.js"],"names":["initContactsRequest","createAction","initContactsSuccess","initContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","itemsReducers","createReducer","_","payload","state","filter","contact","id","loading","getCurrentUserRequest","getCurrentUserSuccess","gentCurrentUserError","reducers","filterReducer","addContactReducer","persistConfig","key","storage","whitelist","contactsReducer","combineReducers","items","addContact","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistedReducer","persistReducer","authReducers","store","configureStore","reducer","auth","contacts","persistor","persistStore","PrivateRouter","children","routeProps","token","useSelector","authSelectors","getToken","Boolean","to","PublicRouter","restricted","AppNav","className","s","app__nav","nav__link","htmlColor","style","fontSize","nav__contacts","Navigation","userName","user","name","isAutorized","isAutorizedUser","dispatch","useDispatch","navigation","user__nav","user__name","onClick","authOperations","logoutUser","logout__button","HomePage","lazy","ContactsPage","RegistrationPage","LoginPage","App","useEffect","getCurrentUser","Container","maxWidth","fallback","path","exact","component","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","getState","a","get","data","registerNewUser","newUser","userRegisterRequest","post","userRegisterSuccess","console","log","userRegisterError","message","loginUser","userLoginRequest","userLoginSuccess","userLoginError","userLogoutRequest","userLogoutSuccess","error","userLogoutError","initialUser","email","userReducer","__","tokenReducer","isAutorizedReducer","module","exports"],"mappings":"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","file":"static/js/main.5a490e23.chunk.js","sourcesContent":["// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst initContactsRequest = createAction('contacts/initContactsRequest');\nconst initContactsSuccess = createAction('contacts/initContactsSuccess');\nconst initContactsError = createAction('contacts/initContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst filterContacts = createAction('contact/filter');\n\nexport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  initContactsRequest,\n  initContactsSuccess,\n  initContactsError,\n  filterContacts,\n};\n","// import * as actions from './contacts-action';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  gentCurrentUserError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n} from '../auth/auth-actions';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n  initContactsRequest,\n  initContactsSuccess,\n  initContactsError,\n} from './contacts-action';\n\nconst itemsReducers = createReducer([], {\n  [initContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [initContactsRequest]: () => true,\n  [initContactsSuccess]: () => false,\n  [initContactsError]: () => false,\n  [getCurrentUserRequest]: () => true,\n  [getCurrentUserSuccess]: () => false,\n  [gentCurrentUserError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst addContactReducer = createReducer(false, {\n  [addContactSuccess]: () => false,\n});\n\nconst reducers = { itemsReducers, filterReducer, loading, addContactReducer };\n\nexport default reducers;\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport reducers from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport authReducers from './auth';\n\nconst persistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nconst contactsReducer = combineReducers({\n  items: reducers.itemsReducers,\n  filter: reducers.filterReducer,\n  loading: reducers.loading,\n  addContact: reducers.addContactReducer,\n});\n\nconst middleware = getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n});\n\nconst persistedReducer = persistReducer(persistConfig, authReducers);\n\nlet store = configureStore({\n  reducer: {\n    auth: persistedReducer,\n    contacts: contactsReducer,\n  },\n  middleware,\n});\n\nlet persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRouter({ children, ...routeProps }) {\n  const token = useSelector(authSelectors.getToken);\n  return (\n    <Route {...routeProps}>\n      {Boolean(token) ? children : <Redirect to=\"/login\" />}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRouter({ children, ...routeProps }) {\n  const token = useSelector(authSelectors.getToken);\n  return (\n    <Route {...routeProps}>\n      {Boolean(token) && routeProps.restricted ? (\n        <Redirect to=\"/contacts\" />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { authSelectors } from '../../../redux/auth';\n\nimport s from './AppNav.module.css';\n\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\nimport HomeIcon from '@material-ui/icons/Home';\n\nexport default function AppNav() {\n  const token = useSelector(authSelectors.getToken);\n\n  return (\n    <div className={s.app__nav}>\n      <NavLink to=\"/\" className={s.nav__link}>\n        <HomeIcon htmlColor=\"#45B39D\" style={{ fontSize: 30 }} />\n      </NavLink>\n\n      {Boolean(token) && (\n        <NavLink to=\"/contacts\" className={s.nav__contacts}>\n          <ContactPhoneIcon htmlColor=\"#45B39D\" style={{ fontSize: 30 }} />\n        </NavLink>\n      )}\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport s from './Navigation.module.css';\nimport AppNav from './NavBar/AppNav';\nimport Exit from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nexport default function Navigation() {\n  const token = useSelector(authSelectors.getToken);\n  const userName = useSelector(state => state.auth.user.name);\n  const isAutorized = useSelector(authSelectors.isAutorizedUser);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.navigation}>\n      <AppNav />\n      {Boolean(token) ? (\n        <>\n          <div className={s.user__nav}>\n            <AccountCircleIcon\n              fontSize=\"large\"\n              htmlColor=\"#45B39D\"\n              style={{ fontSize: 30 }}\n            />\n            {isAutorized && <p className={s.user__name}>Welcome, {userName}</p>}\n            <button\n              onClick={() => dispatch(authOperations.logoutUser())}\n              className={s.logout__button}\n            >\n              <Exit\n                fontSize=\"large\"\n                htmlColor=\"#45B39D\"\n                style={{ fontSize: 30 }}\n              />\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <NavLink to=\"/login\" className={s.nav__link}>\n            Login\n          </NavLink>\n          <NavLink to=\"/register\" className={s.nav__link}>\n            Registration\n          </NavLink>\n        </>\n      )}\n    </div>\n  );\n}\n","import { Suspense, lazy, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from './redux/auth';\nimport { Container } from '@material-ui/core';\nimport PrivateRouter from './components/PrivateRouter';\nimport PublicRouter from './components/PublicRouter';\nimport Navigation from './components/Navigation/Navigation';\n\nconst HomePage = lazy(() =>\n  import('./views/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./views/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\nconst RegistrationPage = lazy(() =>\n  import('./views/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./views/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <Navigation />\n        <Suspense fallback=\"loading\">\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <PrivateRouter path=\"/contacts\" exact component={ContactsPage} />\n            <PublicRouter\n              path=\"/login\"\n              restricted\n              exact\n              component={LoginPage}\n            />\n            <PublicRouter\n              path=\"/register\"\n              restricted\n              exact\n              component={RegistrationPage}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport {\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  gentCurrentUserError,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userRegisterError,\n  userLoginError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLogoutRequest,\n  userLogoutError,\n  userLogoutSuccess,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unSet() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: getToken },\n  } = getState();\n\n  if (!getToken) {\n    return;\n  }\n\n  token.set(getToken);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const { data } = await axios.get('/users/current');\n\n    dispatch(getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(gentCurrentUserError(error));\n  }\n};\n\nconst registerNewUser = newUser => async dispatch => {\n  dispatch(userRegisterRequest());\n\n  try {\n    const { data } = await axios.post('/users/signup', newUser);\n\n    token.set(data.token);\n    dispatch(userRegisterSuccess(data));\n  } catch (error) {\n    console.log('registration error');\n    dispatch(userRegisterError(error.message));\n  }\n};\n\nconst loginUser = user => async dispatch => {\n  dispatch(userLoginRequest());\n\n  try {\n    const { data } = await axios.post('/users/login', user);\n\n    token.set(data.token);\n    dispatch(userLoginSuccess(data));\n  } catch (error) {\n    dispatch(userLoginError(error.message));\n  }\n};\n\nconst logoutUser = () => async dispatch => {\n  dispatch(userLogoutRequest());\n\n  try {\n    axios.post('/users/logout');\n\n    token.unSet();\n    dispatch(userLogoutSuccess());\n  } catch (error) {\n    dispatch(userLogoutError(error.message));\n  }\n};\n\nexport { getCurrentUser, registerNewUser, loginUser, logoutUser };\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport {\n  gentCurrentUserError,\n  getCurrentUserSuccess,\n  userLoginError,\n  userLoginSuccess,\n  userLogoutSuccess,\n  userRegisterError,\n  userRegisterSuccess,\n} from './auth-actions';\n\nconst initialUser = { email: null, name: null };\n\nconst userReducer = createReducer(initialUser, {\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n  [userRegisterSuccess]: (_, { payload }) => payload.user,\n  [userLoginSuccess]: (_, { payload }) => payload.user,\n  [userLogoutSuccess]: (_, __) => initialUser,\n});\n\nconst tokenReducer = createReducer(null, {\n  [userRegisterSuccess]: (_, { payload }) => payload.token,\n  [userLoginSuccess]: (_, { payload }) => payload.token,\n  [userLogoutSuccess]: (_, __) => null,\n  [gentCurrentUserError]: () => null,\n});\n\nconst isAutorizedReducer = createReducer(false, {\n  [userRegisterSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [userLoginSuccess]: () => true,\n  [userLoginError]: () => false,\n  [userLogoutSuccess]: () => false,\n  [userRegisterError]: () => false,\n  [gentCurrentUserError]: () => false,\n});\n\nconst authReducers = combineReducers({\n  user: userReducer,\n  token: tokenReducer,\n  isAutorized: isAutorizedReducer,\n});\n\nexport default authReducers;\n","const isAutorizedUser = state => state.auth.isAutorized;\n\nconst getToken = state => state.auth.token;\n\nexport { isAutorizedUser, getToken };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1VtLy\",\"user__nav\":\"Navigation_user__nav__1sYAA\",\"logout__button\":\"Navigation_logout__button__cb9hl\",\"nav__link\":\"Navigation_nav__link__3bFyi\",\"user__name\":\"Navigation_user__name__2k4I-\",\"user__circle\":\"Navigation_user__circle__3hlqF\",\"user__avatar\":\"Navigation_user__avatar__29NKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__nav\":\"AppNav_app__nav__m1Qe7\",\"nav__contacts\":\"AppNav_nav__contacts__165Pl\",\"nav__link\":\"AppNav_nav__link__sp8y_\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst gentCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst userRegisterRequest = createAction('auth/userRegisterRequest');\nconst userRegisterSuccess = createAction('auth/userRegisterSuccess');\nconst userRegisterError = createAction('auth/userRegisterError');\n\nconst userLoginRequest = createAction('auth/userLoginRequest');\nconst userLoginSuccess = createAction('auth/userLoginSuccess');\nconst userLoginError = createAction('auth/userLoginError');\n\nconst userLogoutRequest = createAction('auth/userLogoutRequest');\nconst userLogoutSuccess = createAction('auth/userLogoutSuccess');\nconst userLogoutError = createAction('auth/userLogoutError');\n\nexport {\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  gentCurrentUserError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginError,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userRegisterError,\n  userLogoutRequest,\n  userLogoutSuccess,\n  userLogoutError,\n};\n"],"sourceRoot":""}